# bugprone-dynamic-static-initializers: false positive with static constexpr
Checks: >
  -*,
  bugprone-*,-bugprone-dynamic-static-initializers,
  clang-analyzer-*,
  performance-*,
  modernize-*,-modernize-use-trailing-return-type,
  readability-*,-readability-magic-numbers,
  misc-*

WarningsAsErrors: 'bugprone-*,clang-analyzer-*,performance-move-const-arg'
HeaderFilterRegex: '.*'
SystemHeaders: false

CheckOptions:
  # Functions/methods: lower_case
  - { key: readability-identifier-naming.FunctionCase,         value: lower_case }
  - { key: readability-identifier-naming.MethodCase,           value: lower_case }
  - { key: readability-identifier-naming.FunctionIgnoredRegexp, value: '^_.*' }
  - { key: readability-identifier-naming.MethodIgnoredRegexp,  value: '^(operator|~).*' }
  
  # Variables: lower_case
  - { key: readability-identifier-naming.VariableCase,         value: lower_case }
  - { key: readability-identifier-naming.ParameterCase,        value: lower_case }
  - { key: readability-identifier-naming.MemberCase,           value: lower_case }
  - { key: readability-identifier-naming.ConstexprVariableCase, value: lower_case }
  - { key: readability-identifier-naming.GlobalVariableCase,   value: lower_case }
  - { key: readability-identifier-naming.StaticVariableCase,   value: lower_case }
  - { key: readability-identifier-naming.VariableIgnoredRegexp, value: '^[A-Z][A-Z0-9_]*$|^_.*' }
  - { key: readability-identifier-naming.StaticVariableIgnoredRegexp, value: '^[A-Z][A-Z0-9_]*$|^_.*' }
  - { key: readability-identifier-naming.GlobalVariableIgnoredRegexp, value: '^_.*' }
  
  # Types: CamelCase
  - { key: readability-identifier-naming.TypeCase,             value: CamelCase }
  - { key: readability-identifier-naming.ClassCase,            value: CamelCase }
  - { key: readability-identifier-naming.StructCase,           value: CamelCase }
  - { key: readability-identifier-naming.EnumCase,             value: CamelCase }
  - { key: readability-identifier-naming.TypeTemplateCase,     value: CamelCase }
  - { key: readability-identifier-naming.TypeAliasCase,        value: CamelCase }
  - { key: readability-identifier-naming.ConceptCase,          value: CamelCase }
  - { key: readability-identifier-naming.NamespaceCase,        value: lower_case }
  
  # ALL_CAPS exceptions (vendor names)
  - { key: readability-identifier-naming.TypeIgnoredRegexp,    value: '^[A-Z][A-Z0-9_]*$' }
  - { key: readability-identifier-naming.ClassIgnoredRegexp,   value: '^[A-Z][A-Z0-9_]*$' }
  - { key: readability-identifier-naming.StructIgnoredRegexp,  value: '^[A-Z][A-Z0-9_]*$' }
  - { key: readability-identifier-naming.TypeAliasIgnoredRegexp, value: '.*_t$|^[A-Z][A-Z0-9_]*$' }
  
  # Enum constants: UPPER_CASE
  - { key: readability-identifier-naming.EnumConstantCase,       value: UPPER_CASE }
  - { key: readability-identifier-naming.ScopedEnumConstantCase, value: UPPER_CASE }